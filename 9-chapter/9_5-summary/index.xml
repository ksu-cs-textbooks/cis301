<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Summary :: CIS 301 Textbook</title><link>https://textbooks.cs.ksu.edu/cis301/9-chapter/9_5-summary/</link><description>Chapter 9 showed us how to write function contracts to specify the requirements and behavior of functions, and loop invariants to reason about the behavior and progress of loops. To wrap up, we briefly summarize the process for verifying a program that includes one or more functions with loops:
Step 1: Write function contracts Write a function contract for any function that doesnâ€™t already have one. Function contracts go just inside the function defintion, and look like:</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis301/9-chapter/9_5-summary/index.xml" rel="self" type="application/rss+xml"/></channel></rss>