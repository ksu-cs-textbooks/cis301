




	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Propositional Logic Translations on CIS 301 Textbook</title>
    <link>https://ksu-cs-textbooks.github.io/cis301/3-chapter/index.html</link>
    <description>Recent content in Propositional Logic Translations on CIS 301 Textbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Aug 2018 10:53:05 -0500</lastBuildDate><atom:link href="https://ksu-cs-textbooks.github.io/cis301/3-chapter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Propositional Atoms</title>
      <link>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_1-propatom/index.html</link>
      <pubDate>Fri, 24 Aug 2018 10:53:26 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_1-propatom/index.html</guid>
      <description>Definition A propositional atom is statement that is either true or false, and that contains no logical connectives (like and, or, not, if/then).
Examples of propositional atoms For example, the following are propositional atoms:
My shirt is red. It is sunny. Pigs can fly. I studied for the test. Examples of what are NOT propositional atoms Propositional atoms should not contain any logical connectives. If they did, this would mean we could have further subdivided the statement into multiple propositional atoms that could be joined with logical operators.</description>
    </item>
    <item>
      <title>NOT, AND, OR Translations</title>
      <link>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_2-notandor/index.html</link>
      <pubDate>Fri, 24 Aug 2018 10:53:26 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_2-notandor/index.html</guid>
      <description>Now that we have seen how to identify propositional atoms in English sentences, we will learn how to connect these propositions with logical operators in order to complete the process of translating from English to propositional logic.
NOT translations When you see the word &amp;ldquo;not&amp;rdquo; and the prefixes &amp;ldquo;un-&amp;rdquo; and &amp;ldquo;ir-&amp;rdquo;, those should be replaced with a NOT operator.
Example 1 For example, if we have the sentence:
I am not going to work today.</description>
    </item>
    <item>
      <title>Implies Translations</title>
      <link>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_3-implies/index.html</link>
      <pubDate>Fri, 24 Aug 2018 10:53:26 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_3-implies/index.html</guid>
      <description>In this section, we will learn when to use an implies (â†’) operator when translating from English to propositional logic. In general, you will want to use an implies operator any time a sentence is making a promise &amp;ndash; if one thing happens, then we promise that another thing will happen. The trick is to figure out the direction of the promise &amp;ndash; promising that if p happens, then q will happen is subtly different from promising that if q happens, then p will happen.</description>
    </item>
    <item>
      <title>Equivalent Translations</title>
      <link>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_4-equiv/index.html</link>
      <pubDate>Fri, 24 Aug 2018 10:53:26 -0500</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_4-equiv/index.html</guid>
      <description>As we saw in section 2.4 ), two logical statements are said to be logically equivalent if and only if they have the same truth value for every truth assignment.
We can extend this idea to our propositional logic translations &amp;ndash; two (English) statements are said to be equivalent iff they have the same underlying meaning, and iff their translations to propositional logic are logically equivalent.
Common equivalences, revisited We previously identified the following common logical equivalences:</description>
    </item>
    <item>
      <title>Knights and Knaves, revisited</title>
      <link>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_5-knightsknavestt/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cis301/3-chapter/3_5-knightsknavestt/index.html</guid>
      <description>Recall the Knights and Knaves puzzles from section 1.2 . In addition to solving these puzzle by hand, we can devise a strategy to first translate a Knights and Knaves puzzle to propositional logic, and then solve the puzzle using a truth table.
Identifying propositional atoms To translate a Knights and Knaves puzzle to propositional logic, we first create a propositional atom for each person that represented whether that person was a knight.</description>
    </item>
  </channel>
</rss>