<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Intro to Sequences :: CIS 301 Textbook</title><link>https://textbooks.cs.ksu.edu/cis301/10-chapter/10_2-intosequences/</link><description>Sequences in Logika are fairly similar to lists in Python and arrays in Java and C#. As with lists and arrays, Logika sequences are ordered. Each element is stored at a particular (zero-based) position, and there are no gaps in the sequence.
Logika can work with sequences of integers (type ZS).
Sequence syntax We can create new sequence variables like this:
// #Sireum #Logika //@Logika: --background save import org.sireum._ //creates the sequence (5, 10, 15) var seq: ZS = ZS(5,10,15) //creates an empty sequence of integers var empty: ZS = ZS()Given the following sequence:</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis301/10-chapter/10_2-intosequences/index.xml" rel="self" type="application/rss+xml"/></channel></rss>